/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Watchlist as PrismaWatchlist } from "@prisma/client";

export class WatchlistServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WatchlistCountArgs, "select">
  ): Promise<number> {
    return this.prisma.watchlist.count(args);
  }

  async watchlists<T extends Prisma.WatchlistFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WatchlistFindManyArgs>
  ): Promise<PrismaWatchlist[]> {
    return this.prisma.watchlist.findMany<Prisma.WatchlistFindManyArgs>(args);
  }
  async watchlist<T extends Prisma.WatchlistFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WatchlistFindUniqueArgs>
  ): Promise<PrismaWatchlist | null> {
    return this.prisma.watchlist.findUnique(args);
  }
  async createWatchlist<T extends Prisma.WatchlistCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WatchlistCreateArgs>
  ): Promise<PrismaWatchlist> {
    return this.prisma.watchlist.create<T>(args);
  }
  async updateWatchlist<T extends Prisma.WatchlistUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WatchlistUpdateArgs>
  ): Promise<PrismaWatchlist> {
    return this.prisma.watchlist.update<T>(args);
  }
  async deleteWatchlist<T extends Prisma.WatchlistDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.WatchlistDeleteArgs>
  ): Promise<PrismaWatchlist> {
    return this.prisma.watchlist.delete(args);
  }
}
